import java.util.Scanner;

//Первый вариант - используем четыре массива
//в которых будем хранить
// Тип личности
// Вопросы
// Ответы

//Еще нам потребуется массив в который мы поместим буквы типов личностей в найденном порядке.
//formulaOfDestiny

//
public class FormulaOfDestiny {
    private static final String[] psyTypes = {
            "Д", "Л", "Э", "Б", "П", "Н", "М", "С"
    };

    static private final String[] sentences = {
            "Я справляюсь с делами, где надо убеждать, инструктировать, распоряжаться.",
            "Я легко решаю алгебраические задачи.",
            "Я бы не смог работать санитаром в больнице, так как не переношу грязи.",
            "В любую минуту я готов сразить соперника удачной репликой или достойно ответить на его выпад.",
            "У меня мирные отношения с людьми, я избегаю споров и борьбы.",
            "Когда я оказываюсь неподвижным, меня тянет в сон.",
            "Я люблю мечтать, не задумываясь, насколько реальны мои мечты.",
            "Я быстро подмечаю слабые стороны человека, идеи, и т.п."
    };

    private static final int[] answerNumbs = new int[8];

    private static final String[] formulaOfDestiny = new String[8];


    //создадим служебные методы

    /**
     * Чтение ответа с консоли
     *
     * @return - число введённое пользователем
     */
    private static int readInt() {
        Scanner in = new Scanner(System.in);
        return in.nextInt();
    }

    /**
     * Запрос - выводим сообщение и ждём ввода числа
     *
     * @param sentence - сообщение, которое будет выведено на экран
     * @return - число, введённое пользователем
     */
    private static int request(String sentence) {
        //вывод сообщения
        System.out.println(sentence);

        //ждать и вернуть ввод с консоли
        int num = readInt();

        //выйти из функции и вернуть число
        return num;
    }


    /**
     * Цикл вопросов пользователю.
     * В цикле выводим сообщение, перебирая массив sentences
     * ответы помещаем в массив answerNumbs
     */
    private static void requestCycle() {
        for (int i = 0; i <= 7; i++) {
            String sentence = sentences[i];
            int answer = request(sentence);
            answerNumbs[i] = answer;
        }
    }

    /**
     * Получить индекс ответа с максимальным значением.
     */
    private static int getIndexOfMax() {
        //здесь мы будем в процессе перебора
        //хранить индекс найденного максимального ответа
        int indexOfMax = 0;

        //перебираем строки ответов,
        for (int i = 0; i <= 7; i++) {
            //читаем значение, что считается пока максимальным, используя индекс максимального значения.
            int currentMaxAnswer = answerNumbs[indexOfMax];

            //текущее значение, для текущего индекса, который мы перебираем в цикле.
            int currentAnswer = answerNumbs[i];

            //если новое, прочитанное из массива, значение больше того, что считается пока максимальным
            //обновляем индекс максимального значения, помещая туда текущее значение индекса
            if (currentMaxAnswer < currentAnswer) {
                indexOfMax = i;
            }
        }

        //выходим из функции, возвращаем найденный индекс.
        return indexOfMax;
    }


    /**
     * Заполняем таблицу formulaOfDestiny.
     * Ищем максимальные ответ и ставим соответствующую букву на первое место.
     * Потом этот ответ обнуляем.
     * Ищем следующий.
     * И так пока не заполним всю таблицу.
     */
    private static void sort() {
        //перебираем позиции строки формулы судьбы
        for (int count = 0; count <= 7; count++) {

            //Получить индекс максимального значения.
            int indexOfMax = getIndexOfMax();

            //поместить его на соответствующее место формулы
            formulaOfDestiny[count] = psyTypes[indexOfMax];

            //обнулить найденный ответ с максимальным значением,
            //чтобы он не оказал влияния на поиск следующего значения.

            answerNumbs[indexOfMax] = 0;
        }
    }


    /**
     * Получить формулу судьбы
     * В консоль выводится вопрос, считывается число - ответ,
     * Цикл опроса - 8 вопросов.
     *
     * @return - строка содержащая последовательность обозначений типов характеров
     */
    public static String getFormulaOfDestiny() {
        //Опрашиваем пользователя
        requestCycle();
        //Сортируем ответы, заполняем таблицу formulaOfDestiny
        sort();

        //Создаём построитель строки, он выстроит отдаваемые ему строки
        //в одну строку.
        StringBuilder stringBuilder = new StringBuilder();


        //Добавляем в буфер начальное сообщение.
        stringBuilder.append("Формула Вашей Судьбы! : ");

        //Проходим по таблице formulaOfDestiny, последовательно передавая обозначение типов в построитель.
        for (String letter : formulaOfDestiny) {
            //добавить обозначение типа - букву
            stringBuilder.append(letter);
            //добавить разделитель между буквами
            stringBuilder.append("-");
        }
        //Преобразовать построитель в строку.
        String result = stringBuilder.toString();

        //Завершить функцию и вернуть строку
        return result;
    }


}
